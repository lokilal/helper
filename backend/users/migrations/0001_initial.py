# Generated by Django 3.2.14 on 2022-09-16 16:34

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import users.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Choice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128, verbose_name='Ответ')),
            ],
            options={
                'verbose_name': 'Ответ',
                'verbose_name_plural': 'Ответы',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='Контактные данные')),
                ('telegram_id', models.IntegerField(unique=True, verbose_name='Telegram ID')),
                ('free_period', models.BooleanField(default=False, verbose_name='Использован бесплатный звонок')),
                ('created_at', models.DateField(auto_now_add=True, verbose_name='Дата регистрации')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Profession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=64, verbose_name='Название профессии')),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
            ],
            options={
                'verbose_name': 'Профессия',
                'verbose_name_plural': 'Профессии',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128, verbose_name='Вопрос')),
                ('profession', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='users.profession', verbose_name='Профессия')),
            ],
            options={
                'verbose_name': 'Вопрос',
                'verbose_name_plural': 'Вопросы',
            },
        ),
        migrations.CreateModel(
            name='QuestionAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата ответа')),
            ],
            options={
                'verbose_name': 'Ответ на вопрос',
                'verbose_name_plural': 'Ответы на вопросы',
                'ordering': ['customer__telegram_id'],
            },
        ),
        migrations.CreateModel(
            name='Worker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='Имя рабочего')),
                ('telegram_id', models.IntegerField(db_index=True, unique=True, verbose_name='Telegram ID')),
                ('gender', models.CharField(choices=[('M', 'Мужчина'), ('F', 'Женщина')], default='M', max_length=1, verbose_name='Пол')),
                ('experience', models.DecimalField(decimal_places=1, max_digits=3, validators=[django.core.validators.MinValueValidator(2)], verbose_name='Опыт работы в годах')),
                ('about', models.TextField(verbose_name='Краткое описание')),
                ('balance', models.PositiveBigIntegerField(default=0, verbose_name='Остаток на балансе')),
                ('verified', models.BooleanField(default=False, verbose_name='Проверенный')),
                ('created_at', models.DateField(auto_now_add=True, verbose_name='Дата создания')),
                ('profession', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workers', to='users.profession', verbose_name='Профессия')),
            ],
            options={
                'verbose_name': 'Работник',
                'verbose_name_plural': 'Работники',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(db_index=True, validators=[users.validators.schedule_time_validator], verbose_name='Время встречи')),
                ('link', models.URLField(null=True, verbose_name='Ссылка на комнату')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='schedules', to='users.customer', verbose_name='Пользователь')),
                ('worker', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='schedules', to='users.worker', verbose_name='Работник')),
            ],
            options={
                'verbose_name': 'Расписание',
                'verbose_name_plural': 'Расписания',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='QuestionChoiceAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('choice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.choice', verbose_name='Ответ пользователя')),
                ('question_answer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.questionanswer', verbose_name='Ответ пользователя')),
            ],
            options={
                'verbose_name': 'Ответ пользователя',
                'verbose_name_plural': 'Ответы пользователя',
            },
        ),
        migrations.AddField(
            model_name='questionanswer',
            name='choice',
            field=models.ManyToManyField(blank=True, null=True, through='users.QuestionChoiceAnswer', to='users.Choice', verbose_name='Ответ'),
        ),
        migrations.AddField(
            model_name='questionanswer',
            name='customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='users.customer', verbose_name='Пользователь'),
        ),
        migrations.AddField(
            model_name='questionanswer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='users.question', verbose_name='Вопрос'),
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(max_length=512, verbose_name='Комментарий')),
                ('score', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Оценка')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Дата публикации')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedbacks', to='users.customer', verbose_name='Пользователь')),
                ('worker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedbacks', to='users.worker', verbose_name='Работник')),
            ],
            options={
                'verbose_name': 'Отзыв',
                'verbose_name_plural': 'Отзывы',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='choice',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='choices', to='users.question', verbose_name='Вопрос'),
        ),
        migrations.AddConstraint(
            model_name='questionchoiceanswer',
            constraint=models.UniqueConstraint(fields=('question_answer', 'choice'), name='unique_question_answer_choice'),
        ),
        migrations.AddConstraint(
            model_name='feedback',
            constraint=models.UniqueConstraint(fields=('customer', 'worker'), name='unique_customer_worker'),
        ),
    ]
